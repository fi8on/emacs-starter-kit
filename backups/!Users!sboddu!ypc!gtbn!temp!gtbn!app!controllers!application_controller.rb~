# Filters added to this controller apply to all controllers in the application.
# Likewise, all the methods added will be available for all controllers.

class ApplicationController < ActionController::Base
  helper :all # include all helpers, all the time

 filter_parameter_logging :password

    
  # ******** Single Sign On Functions BEGIN ********

  def logout
    session[:user] = nil
    # TODO: CHANGE THIS TO PRODUCTION SERVER
   # redirect_to 'https://ssodev.flight.yellowpages.com/logout'
   redirect_to 'https://sso.yellowpages.com/logout'
  end

  protected

  def require_login
    if @sso = sso_auth(:dev => false, :allow_proxy_ips => ['127.0.0.1'])
      render :template => 'layouts/403', :status => 403 unless current_user && authorized?
      session[:user] = @sso[:user]
    end
  end

  def optional_login
    if @sso = sso_auth(:redirect => false, :dev => true)
      current_user
    end
  end

  def current_user
    if @sso
      @sso[:user]
    else
      nil
    end
  end

  def logged_in?
    !current_user.nil?
  end

  def authorized?; true; end



  # ******** Single Sign On Functions END ********

  # See ActionController::RequestForgeryProtection for details
  # Uncomment the :secret if you're not using the cookie session store
  protect_from_forgery # :secret => '44571e99d1f49ed354ccbbffe08f2024'

  # See ActionController::Base for details
  # Uncomment this to filter the contents of submitted sensitive data parameters
  # from your application log (in this case, all fields with names like "password").
  # filter_parameter_logging :password
  ActiveScaffold.set_defaults do |config|
    #config.ignore_columns.add [:updated_at, :lock_version]
     # config.list.results_per_page = 20
  end

end
