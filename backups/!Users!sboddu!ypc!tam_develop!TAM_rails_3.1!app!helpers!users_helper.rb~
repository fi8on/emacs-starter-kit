module UsersHelper
  def users_status_options_for_select(selected)
    user_count_by_status = User.count(:group => 'status').to_hash
    options_for_select([["All", ''],["Active (#{user_count_by_status[1].to_i})", 1]], selected)
  end
  
  # Options for the new membership projects combo-box
  def options_for_membership_project_select(user, projects)
    options = content_tag('option', "--Select--")
    options << project_tree_options_for_select(projects) do |p|
      {:disabled => (user.projects.include?(p))}
    end
    options
  end
  
  def change_status_link(user)
    url = {:controller => 'users', :action => 'update', :id => user, :page => params[:page], :status => params[:status], :tab => nil}
    
    if user.locked?
      link_to "Unlock", url.merge(:user => {:status => User::STATUS_ACTIVE}), :method => :put, :class => 'icon icon-unlock'
    elsif user != User.current
      link_to "Lock", url.merge(:user => {:status => User::STATUS_LOCKED}), :method => :put, :class => 'icon icon-lock'
    end
  end
  
  def user_settings_tabs
    tabs = [{:name => 'general', :partial => 'users/general', :label => "General"},
            {:name => 'memberships', :partial => 'users/memberships', :label =>"Projects" }
            ]
  end

  def user_check_box_tags(name,principals)
    s = ''
    mail = ''
    principals.sort.each do |principal|
      mail = "(#{principal.mail})" if !principal.mail.blank?
      user_details  = {:firstname => principal.firstname,:lastname => principal.lastname,:mail =>principal.mail,:login => principal.login }.to_json
      s << "<label>#{ check_box_tag name, [user_details], false }<b> #{h principal}</b> #{mail} </label>\n"
    end
    s 
  end

  
end
