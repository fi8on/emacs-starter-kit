def self.from_login(name, options={})
    User.new(name, options)
  end

  attr_accessor :name

  def initialize(name, options={})
    @name = name
    @roles = (options.fetch(:roles, []).map{|r| SSO_USERMAP[r] }).compact << :guest
  end
  
  def role_symbols
    @roles
  end
  
  def real_role
    real = :guest
    SSO_ROLES.each do |k|
      if @roles.include?(k)
        real = k.to_s.gsub(/_(.)/) {" " + $1.upcase }.gsub(/^(.)/){ $1.upcase }
        break
      end
    end
    
    support_roles = (SSO_SUPPORT_ROLES & @roles).map {|r| r.to_s.gsub('_', ' ') }
    unless support_roles.blank?
      real = real + " with " + support_roles.join(' and ')
    end
    
    return real
  end
